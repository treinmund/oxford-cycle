"0","# A function to calculate distinace between VRUs and non-VRUs"
"0","calculateDistance <- function(df) {"
"0","# Argument: dataframe or list of dataframes"
"0","# Returns: dataframe or list of dataframes with distance between VRUs and non-VRUs"
"0","# Create separate vectors for VRU and non-VRUs"
"0","  vru <- df |>"
"0","    filter(VRU ==1) |>"
"0","    select(trackId, xCenter, yCenter, mVelocity, VRU) |>"
"0","    rename("
"0","      vru_Id = trackId,"
"0","      vru_xCenter = xCenter,"
"0","      vru_yCenter = yCenter,"
"0","      vru_mVelocity = mVelocity,"
"0","      vru = VRU"
"0","    )"
"0","  "
"0","  non_vru <- df |>"
"0","    filter(VRU == 0) |>"
"0","    select(trackId, xCenter, yCenter, mVelocity, VRU) |>"
"0","    rename("
"0","      non_vru_Id = trackId,"
"0","      non_vru_xCenter = xCenter,"
"0","      non_vru_yCenter = yCenter,"
"0","      non_vru_mVelocity = mVelocity,"
"0","      non_vru = VRU"
"0","    )"
"0","  "
"0","  # Find all VRU and non-VRU combinations"
"0","  combinations <- crossing(vru, non_vru)"
"0","  "
"0","  # Calculate distinace "
"0","  dist_df <- combinations |>"
"0","    mutate("
"0","      distance = sqrt((vru_xCenter - non_vru_xCenter)^2 + (vru_yCenter - non_vru_yCenter)^2)"
"0","    )"
"0","  "
"0","  return(dist_df)"
"0","}"
"0",""
"0","# Create distance dataframe for each recording. Trying to create a function that does it all at one time keeps crashing my laptop"
"0","recording0 <- tracks_eda[[1]] |> "
"0","  ungroup() |>"
"0","  nest(.by = frame) |>"
"0","  mutate(distance = lapply(data, calculateDistance))"
