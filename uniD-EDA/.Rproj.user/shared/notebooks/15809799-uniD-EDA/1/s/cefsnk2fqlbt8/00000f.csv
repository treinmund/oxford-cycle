"0","calculateRotatingBoundingBox <- function(x_center, y_center, width, length, angle = 45) {"
"0","  # Convert the rotation angle to radians. Angle is 45 degrees from image."
"0","  angle_rad <- angle * (pi / 180)"
"0","  "
"0","  # Calculate half the width and half the length"
"0","  half_width <- width / 2"
"0","  half_length <- length / 2"
"0","  "
"0","  # Calculate the coordinates of the bounding box corners"
"0","  x_cos <- half_length * cos(angle_rad)"
"0","  x_sin <- half_width * sin(angle_rad)"
"0","  y_cos <- half_length * sin(angle_rad)"
"0","  y_sin <- half_width * cos(angle_rad)"
"0","  "
"0","  x_min <- x_center - x_cos - y_sin"
"0","  x_max <- x_center + x_cos - y_sin"
"0","  y_min <- y_center - x_sin + y_cos"
"0","  y_max <- y_center + x_sin + y_cos"
"0","  "
"0","  # Return the bounding box coordinates as a list"
"0","  return(list(x_min = x_min, x_max = x_max, y_min = y_min, y_max = y_max))"
"0","}"
"0",""
"0","calculateOrientation <- function(x_min, x_max, y_min, y_max) {"
"0","  # Calculate the center point of the bounding box"
"0","  x_center <- (x_min + x_max) / 2"
"0","  y_center <- (y_min + y_max) / 2"
"0","  "
"0","  # Calculate the orientation as the arctangent of the box's side"
"0","  orientation_rad <- atan2(y_max - y_min, x_max - x_min)"
"0","  "
"0","  # Convert the orientation angle to degrees"
"0","  orientation_deg <- orientation_rad * (180 / pi)"
"0","  "
"0","  # Return the orientation angle in degrees and the center point coordinates"
"0","  return(list(orientation_deg = orientation_deg, x_center = x_center, y_center = y_center))"
"0","}"
"0",""
"0","calculateDirection <- function(delta_x, delta_y) {"
"0","  # Calculate the direction angle in radians"
"0","  direction_rad <- atan2(delta_y, delta_x)"
"0","  "
"0","  # Convert the direction angle to degrees"
"0","  direction_deg <- direction_rad * (180 / pi)"
"0","  "
"0","  # Return the direction angle in degrees"
"0","  return(direction_deg)"
"0","}"
"0",""
"0","# Calculate the change in x and y position across each frame"
"0","calculatePositionChange <- function(df) {"
"0","  df |>"
"0","  group_by(trackId) |>"
"0","  mutate("
"0","    delta_x = lag(xCenter) - xCenter,"
"0","    delta_y = lag(yCenter) - yCenter,"
"0","    "
"0","    # Replace NA from first observation with 0"
"0","    delta_x = coalesce(delta_x, 0),"
"0","    delta_y = coalesce(delta_y, 0)"
"0","  )"
"0","}"
"0",""
"0",""
"0","# Calculate position change for each track"
"0","tracks_dfs <- lapply(tracks_dfs, calculatePositionChange)"
"0",""
"0",""
"0","# Calculate the orientation, direction, and area of each object"
"0","tracks_eda <- lapply(tracks_dfs, function(df) {"
"0","  df |>"
"0","  mutate("
"0","    mVelocity = sqrt(xVelocity^2 + yVelocity^2),"
"0","    orientation = calculateOrientation(calculateRotatingBoundingBox(xCenter, yCenter, width, length)$x_min,"
"0","                                       calculateRotatingBoundingBox(xCenter, yCenter, width, length)$x_max,"
"0","                                       calculateRotatingBoundingBox(xCenter, yCenter, width, length)$y_min,"
"0","                                       calculateRotatingBoundingBox(xCenter, yCenter, width, length)$y_max"
"0","                                       )$orientation_deg,"
"0","    direction = calculateDirection(delta_x, delta_y),"
"0","    area = width * length"
"0","  ) |>"
"0","  # Adjust the direction angle to be between 0 and 360 degrees"
"0","  mutate("
"0","    direction = case_when(direction < 0 ~ direction + 360,"
"0","                          direction >= 0 ~ direction)"
"0","  )"
"0","})"
"0",""
"0","# Create binary variable for Vulnerable Road Users (VRU)"
"0","tracks_eda <- lapply(tracks_eda, function(df) {"
"0","  df |>"
"0","    mutate("
"0","    VRU = case_when(class == ""pedestrian"" ~ 1,"
"0","                    class == ""bicycle"" ~ 1,"
"0","                    class == ""animal"" ~ 1,"
"0","                    class == ""motorcycle"" ~ 1,"
"0","                    class == ""car"" ~ 0,"
"0","                    class == ""bus"" ~ 0,"
"0","                    class == ""truck"" ~ 0,"
"0","                    class == ""trailer"" ~ 0,"
"0","                    class == ""van"" ~ 0"
"0","    )"
"0","    )"
"0","}"
"0",")"
